<Window x:Class="TestMVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cmd="clr-namespace:TestMVVM.Infrastructure.Commands"
        xmlns:vm="clr-namespace:TestMVVM.ViewModels"
        xmlns:local="clr-namespace:TestMVVM"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="450" Width="800">

    <!--Назначаем на Ctrl+Q команду на закрытие приложения -->
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Q" Command="{Binding ExitApplicationCommand}"/>
    </Window.InputBindings>
    
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!-- Добавляем команду в ресурсы окна, для использования ее в любом месте окна и назначаем для нее ключ с любым именем-->
        <cmd:ExitApplicationCommand x:Key="ExitApplicationCommand"/>
    </Window.Resources>

        <Grid>
        <Menu>
            <MenuItem Header="Connection">
                <MenuItem Header="Open Connection"/>  <!-- Command="" CommandParameter="" ="OpenConnection_Click"/> -->
                <MenuItem Header="Close Connection"/> <!--="CloseConnection_Click"-->
               <!-- <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}"/> -->
                
                <!-- Второй вариант применения команд созданием отдельной команды в классе (см папку Commands):-->
                <!--<MenuItem Header="Exit">
                    <MenuItem.Command>
                        <cmd:ExitApplicationCommand/>
                    </MenuItem.Command> -->
                <!--При таком варианте использования команды - мы использовали команду отдельно-стоящую - 
                    т.е. мы использовали ее прямо на месте, здесь прямо в разметку Парсер XAML создаст объект и 
                    вставит его в свойство Command. Если у нас много где используется эта команда, т.е. повторяется,
                    то такой подход будет слишком расточительным для памяти.
                    В этом случае, да и вообще всегда, такие команды стоит вынести в отдельные ресурсы, которые будут доступны той разметке
                    где они нужны
                    Если команда используется в пределах окна, то внутри этого окна следует создать область Ресурсов <Window.Resources> 
                    и туда поместить свою команду, которую впоследствии внутри всего окна мы будем использовать 
                    Если эта команда - уровня всего приложения и она используется в нескольких окнах, то имеет смысл завести
                    словарь ресурсов и подключить его на уровне всего приложения в файле App.xaml <Application.Resources> 
                    Тогда эту команду можно будет как ресурс подключить в любом месте разметки и она не будет сжирать память каждый раз-->
                
                <!-- Подключение команды из ресурсов окна через StaticResource : -->
                <MenuItem Header="Exit" Command="{StaticResource ExitApplicationCommand}"/>
                
            </MenuItem>
        </Menu>
    </Grid>
</Window>
